export default (client: any, handler: any) => ({
  /** @param {{params:{id:string},clientOptions:{}}} requestOptions * @return {[{code:200,data:{id:number,title:string,created_at:dateTime,expires_at:dateTime,key:string,usage_type:string,user:{id:number,username:string,name:string,state:string,locked:boolean,avatar_url:string,avatar_path:string,custom_attributes:[{value:{}},{value:{}}],web_url:string,created_at:string,bio:string,location:string,public_email:string,skype:string,linkedin:string,twitter:string,discord:string,website_url:string,organization:string,job_title:string,pronouns:string,bot:string,work_information:string,followers:string,following:string,is_followed:string,local_time:string,last_sign_in_at:dateTime,confirmed_at:dateTime,last_activity_on:dateTime,email:string,theme_id:number,color_scheme_id:number,projects_limit:number,current_sign_in_at:dateTime,identities:{provider:{value:{}},extern_uid:{value:{}},saml_provider_id:{value:{}}},can_create_group:boolean,can_create_project:boolean,two_factor_enabled:boolean,external:string,private_profile:boolean,commit_email:string,shared_runners_minutes_limit:string,extra_shared_runners_minutes_limit:string,scim_identities:{extern_uid:{value:{}},group_id:{value:{}},active:{value:{}}}}}}]} */
  get: ({query = {},clientOptions = {}} = {}) => handler.apply({method:"get",url:"api/v4/keys",resource:"api",variable:[],headers:{Accept:"application/json"},query:[{name:"fingerprint",type:"string"}],data:null}, [client, {query, clientOptions}]),
  getOne: ({params = {},clientOptions = {}} = {}) => handler.apply({method:"get",url:"api/v4/keys/:id",resource:"api",variable:[{name:"id",type:"string"}],headers:{Accept:"application/json"},query:[],data:null}, [client, { params, clientOptions}])
})