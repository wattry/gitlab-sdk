export default (client: any, handler: any) => ({
  /** @param {{params:{repository_storage_move_id:string},clientOptions:{}}} requestOptions * @return {[{code:200,data:{id:number,created_at:dateTime,state:string,source_storage_name:string,destination_storage_name:string,error_message:string,snippet:{id:number,title:string,description:string,visibility:string,author:{id:{value:{}},username:{value:{}},name:{value:{}},state:{value:{}},locked:{value:{}},avatar_url:{value:{}},avatar_path:{value:{}},custom_attributes:{value:{}},web_url:{value:{}}},created_at:dateTime,updated_at:dateTime,project_id:number,web_url:string,raw_url:string,ssh_url_to_repo:string,http_url_to_repo:string}}}]} */
  get: ({query = {},clientOptions = {}} = {}) => handler.apply({method:"get",url:"api/v4/snippet_repository_storage_moves",resource:"api",variable:[],headers:{Accept:"application/json"},query:[{name:"page",type:"string"},{name:"per_page",type:"string"}],data:null}, [client, {query, clientOptions}]),
  post: ({data = {},clientOptions = {}} = {}) => handler.apply({method:"post",url:"api/v4/snippet_repository_storage_moves",resource:"api",variable:[],headers:{"Content-Type":"application/json"},query:[],data:{mode:"raw",raw:{source_storage_name:"string",destination_storage_name:"string"},options:{raw:{language:"json"}}}}, [client, {data, clientOptions}]),
  getOne: ({params = {},clientOptions = {}} = {}) => handler.apply({method:"get",url:"api/v4/snippet_repository_storage_moves/:repository_storage_move_id",resource:"api",variable:[{name:"repository_storage_move_id",type:"string"}],headers:{Accept:"application/json"},query:[],data:null}, [client, { params, clientOptions}])
})