/* eslint-disable max-len */
export default (client, handler) => ({
  /** @param {{query?:{page:string,per_page:string,order_by:string,sort:string}}} request @param {any} [options={}] @return {Promise<{code:200,data:[{id:string,url:string,name:string,description:string,created_at:string,push_events:boolean,tag_push_events:boolean,merge_requests_events:boolean,repository_upstring_events:boolean,enable_ssl_verification:boolean,alert_status:symbol,disabled_until:string,url_variables:[object,object],custom_webhook_template:string},{id:string,url:string,name:string,description:string,created_at:string,push_events:boolean,tag_push_events:boolean,merge_requests_events:boolean,repository_upstring_events:boolean,enable_ssl_verification:boolean,alert_status:symbol,disabled_until:string,url_variables:[object,object],custom_webhook_template:string}]}>} */
  get: ({query} = {}, options = {}) => handler.apply({method:'get',url:'api/v4/hooks',headers:{Accept:'application/json'},variable:[],query:[{name:'page',type:'string'},{name:'per_page',type:'string'},{name:'order_by',type:'string'},{name:'sort',type:'string'}]}, [client, {query}, options]),
  /** @param {{params:{hook_id:string}}} request @param {any} [options={}] @return {Promise<{code:201}>} */
  post: ({params} = {}, options = {}) => handler.apply({method:'post',url:'api/v4/hooks/:hook_id',variable:[{name:'hook_id',type:'string'}]}, [client, { params}, options]),
  /** @param {{params:{hook_id:string}}} request @param {any} [options={}] @return {Promise<{code:200,data:{id:string,url:string,name:string,description:string,created_at:string,push_events:boolean,tag_push_events:boolean,merge_requests_events:boolean,repository_upstring_events:boolean,enable_ssl_verification:boolean,alert_status:symbol,disabled_until:string,url_variables:[object,object],custom_webhook_template:string}}|{code:404}>} */
  getOne: ({params} = {}, options = {}) => handler.apply({method:'get',url:'api/v4/hooks/:hook_id',headers:{Accept:'application/json'},variable:[{name:'hook_id',type:'string'}]}, [client, { params}, options]),
  /** @param {{params:{hook_id:string},data:{url:string,name:string,description:string,token:string,push_events:boolean,tag_push_events:boolean,merge_requests_events:boolean,repository_upstring_events:boolean,enable_ssl_verification:boolean,url_variables:[{key:string,value:string},{key:string,value:string}]}}} request @param {any} [options={}] @return {Promise<{code:200,data:{id:string,url:string,name:string,description:string,created_at:string,push_events:boolean,tag_push_events:boolean,merge_requests_events:boolean,repository_upstring_events:boolean,enable_ssl_verification:boolean,alert_status:symbol,disabled_until:string,url_variables:[object,object],custom_webhook_template:string}}|{code:400}|{code:404}|{code:422}>} */
  put: ({params,data} = {}, options = {}) => handler.apply({method:'put',url:'api/v4/hooks/:hook_id',headers:{'Content-Type':'application/json',Accept:'application/json'},variable:[{name:'hook_id',type:'string'}],data:{mode:'raw',raw:{url:'string',name:'string',description:'string',token:'string',push_events:'boolean',tag_push_events:'boolean',merge_requests_events:'boolean',repository_upstring_events:'boolean',enable_ssl_verification:'boolean',url_variables:[{key:'string',value:'string'},{key:'string',value:'string'}]},options:{raw:{language:'json'}}}}, [client, { params, data}, options]),
  /** @param {{params:{hook_id:string}}} request @param {any} [options={}] @return {Promise<{code:204,data:{id:string,url:string,name:string,description:string,created_at:string,push_events:boolean,tag_push_events:boolean,merge_requests_events:boolean,repository_upstring_events:boolean,enable_ssl_verification:boolean,alert_status:symbol,disabled_until:string,url_variables:[object,object],custom_webhook_template:string}}|{code:404}>} */
  delete: ({params} = {}, options = {}) => handler.apply({method:'delete',url:'api/v4/hooks/:hook_id',headers:{Accept:'application/json'},variable:[{name:'hook_id',type:'string'}]}, [client, { params}, options]),
  "url_variables": {
    /** @param {{params:{hook_id:string,key:string},data:{value:string}}} request @param {any} [options={}] @return {Promise<{code:200}>} */
    put: ({params,data} = {}, options = {}) => handler.apply({method:'put',url:'api/v4/hooks/:hook_id/url_variables/:key',headers:{'Content-Type':'application/json'},variable:[{name:'hook_id',type:'string'},{name:'key',type:'string'}],data:{mode:'raw',raw:{value:'string'},options:{raw:{language:'json'}}}}, [client, { params, data}, options]),
    /** @param {{params:{hook_id:string,key:string}}} request @param {any} [options={}] @return {Promise<{code:204}>} */
    delete: ({params} = {}, options = {}) => handler.apply({method:'delete',url:'api/v4/hooks/:hook_id/url_variables/:key',variable:[{name:'hook_id',type:'string'},{name:'key',type:'string'}]}, [client, { params}, options])
  }
});