/** @param {any} [request={}] @param {any} [options={}] @return {Promise<{id:1,username:string,email:string,name:string,state:string,locked:boolean,avatar_url:string,web_url:string,created_at:string,bio:string,location:null,public_email:string,skype:string,linkedin:string,twitter:string,discord:string,website_url:string,organization:string,job_title:string,pronouns:string,bot:boolean,work_information:null,followers:0,following:0,local_time:string,last_sign_in_at:string,confirmed_at:string,theme_id:1,last_activity_on:string,color_scheme_id:2,projects_limit:100,current_sign_in_at:string,identities:[{provider:'github'|'bitbucket'|'google_oauth2',extern_uid:string,}],can_create_group:boolean,can_create_project:boolean,two_factor_enabled:boolean,external:boolean,private_profile:boolean,commit_email:string}>} */
const user = (client, handler) => ({
  get: (request = {}, options = {}) => handler.apply({ method: 'get', url: 'api/v4/user', headers: { Accept: 'application/json' }, variable: [], query: [] }, [client, request, options]),
});
export interface User { id: 1, username: string, email: string, name: string, state: string, locked: boolean, avatar_url: string, web_url: string, created_at: string, bio: string, location: null, public_email: string, skype: string, linkedin: string, twitter: string, discord: string, website_url: string, organization: string, job_title: string, pronouns: string, bot: boolean, work_information: null, followers: 0, following: 0, local_time: string, last_sign_in_at: string, confirmed_at: string, theme_id: 1, last_activity_on: string, color_scheme_id: 2, projects_limit: 100, current_sign_in_at: string, identities: [{ provider: 'github' | 'bitbucket' | 'google_oauth2', extern_uid: string, }], can_create_group: boolean, can_create_project: boolean, two_factor_enabled: boolean, external: boolean, private_profile: boolean, commit_email: string }